






CREATE COMPUTE MODULE Student_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- 1. Declaration variables, capture & generate value
		DECLARE vGrade CHAR;
		DECLARE vPercentage, vMarksAchieved, vMarksTotal FLOAT;
		DECLARE vYear INT 2019;
		DECLARE vYearOfBirth,vAge INT;
		
		SET vYearOfBirth = CAST(InputRoot.XMLNSC.Student.YearOfBirth AS INT);
		SET vAge= vYear-vYearOfBirth;
		-- 2.Generate Percentage based on Achieved Marks
		SET vMarksAchieved = CAST(InputRoot.XMLNSC.Student.Marks.Achieved AS FLOAT);
		SET vMarksTotal=  CAST(InputRoot.XMLNSC.Student.Marks.OutOf AS FLOAT);
		SET vPercentage = (vMarksAchieved/vMarksTotal)*100;
		IF vPercentage > 90 THEN
			SET vGrade ='A++';
		ELSEIF vPercentage <=90 and vPercentage > 75 THEN
			SET vGrade ='A+';
		ELSEIF vPercentage <= 75 and vPercentage > 60 THEN
			SET vGrade = 'A';
		ELSEIF vPercentage <= 60 and vPercentage > 50 THEN
			SET vGrade = 'B';
		ELSE
			SET vGrade = 'C';
		END IF;
		-- 3. Start Transormation
		SET OutputRoot.XMLNSC.Applicant.Name.FirstName =InputRoot.XMLNSC.Student.FirstName;
		SET OutputRoot.XMLNSC.Applicant.Name.LastName = InputRoot.XMLNSC.Student.LastName;
		SET OutputRoot.XMLNSC.Applicant.Age = vAge;
		SET OutputRoot.XMLNSC.Applicant.Gender = InputRoot.XMLNSC.Student.Sex;
		SET OutputRoot.XMLNSC.Applicant.Contact.Phone = InputRoot.XMLNSC.Student.Phone;
		SET OutputRoot.XMLNSC.Applicant.Contact.Email = InputRoot.XMLNSC.Student.Email;
		SET OutputRoot.XMLNSC.Applicant.Grade = vGrade;

		-- SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName =  UCASE(InputRoot.XMLNSC.Student.FirstName);

		SET OutputRoot.MQMD.ReplyToQ = UCASE(InputRoot.XMLNSC.Student.FirstName);
--		PROPAGATE TO TERMINAL 'out' DELETE NONE; -- PROPAGATE TO TERMINAL 'out' AND CONTROL COMES BACK;
--		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
--		PROPAGATE TO TERMINAL 'out2' DELETE NONE;
--		PROPAGATE TO TERMINAL 'out3' DELETE NONE;
--		PROPAGATE TO TERMINAL 'out4' DELETE NONE;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;